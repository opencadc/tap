
## commented out values are the defaults, shown as examples
## to customise behaviour, subclass the specified class and 
## change the configuration here

## configure supported values of LANG parameter and the TapQuery implementation
## this could be customised to enable additional query langauges
## e.g. direct SQL (see ca.nrc.cadc.tap.SqlQuery), PQL, etc.
#ca.nrc.cadc.tap.TapQuery.langValues = ADQL ADQL-2.0
#ADQL = ca.nrc.cadc.tap.AdqlQuery
#ADQL-2.0 = ca.nrc.cadc.tap.AdqlQuery

## this usually needs to be customised to set your own default and max limits
#ca.nrc.cadc.tap.MaxRecValidator.impl = ca.nrc.cadc.tap.MaxRecValidator

## this usually needs to be customised since the default impl throws an 
## UnsupportedOperationException (see BasicUploaddManager)
#ca.nrc.cadc.tap.UploadManager = ca.nrc.cadc.tap.DefaultUploadManager

## this could be customised to add support for new output formats
#ca.nrc.cadc.tap.TableWriter = ca.nrc.cadc.tap.DefaultTableWriter

## this usually has to be customised to handle formatting db-specific values into votable
#ca.nrc.cadc.tap.writer.format.FormatFactory = ca.nrc.cadc.tap.writer.format.DefaultFormatFactory

## Database specific to the plugged in Database library.
#ca.nrc.cadc.tap.upload.DatabaseDataType = ca.nrc.cadc.tap.upload.datatype.BasicDataTypeMapper

## this must be implemented to store async query results and generator a URL for the UWS result
## previous versions if this library required ca.nrc.cadc.tap.impl.ResultStoreImpl
#ca.nrc.cadc.tap.ResultStore = 
