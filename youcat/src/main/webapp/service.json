{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "user-managed TAP service (youcat)",
    "description": "This page contains technical API information.\n\nThis service implements the IVOA <a href=\"http://www.ivoa.net/documents/TAP/20190927/\">TAP-1.1</a> Recommendation plus extensions to support table creation and bulk loading of content.\n\nThe endpoints listed below support both anonymous and authenticated access (using client certificate or cookie).\n\n YouCat supports user management of permissions at both the schema and table level. A schema owner is set when a YouCat allocation is created by the service operator.  Table owners are set to be the user who created the table.  Owners can set a flag for anonymous reading and can set groups for read-only and read-write permissons.\n The following describes how the permissions are enforced on schemas and tables:\n\n \t{schema|table}.public = false|true\n \t\tallows querying via TAP API\n \t{schema|table|.read-only = NULL | {group URI}\n \t\tread-only permission on a schema: allows TAP API to expose table\n \t\tread-only permission on table: allows TAP API  to expose content of a table\n \t{schema|table}.read-write = NULL | {group URI}\n \t\tread-write permissions on a schema: read-only + create table\n \t\tread-write permission on a table: read-only + create index, append rows, update (tap_schema) metadata\n \t{schema|table}.owner\n \t\towner of a schema has: read-write + drop (any) table\n \t\towner of a table has: read-write + drop table\n \t\towner of a schema: change permissions on schema and all tables\n \t\towner of a table: change permissions on table\n\nGroup URIs are in the format:\n\n \tivo://cadc.nrc.ca/gms?groupName"
  },
  "schemes": [
    "https"
  ],
  "basePath": "/youcat",
  "paths": {
    "/async": {
      "post": {
        "summary": "IVOA TAP v1.1",
        "tags": [
          "TAP"
        ],
        "description": "TAP asynchronous query endpoint (create UWS Job)\n",
        "parameters": [
          {
            "name": "LANG",
            "in": "query",
            "description": "specify the query language used in the QUERY parameter",
            "required": true,
            "type": "string"
          },
          {
            "name": "QUERY",
            "in": "query",
            "description": "specify the query",
            "required": true,
            "type": "string"
          },
          {
            "name": "FORMAT",
            "in": "query",
            "description": "supported for backwards compatibility to 1.0 (see: RESPONSEFORMAT)",
            "required": false,
            "type": "string"
          },
          {
            "name": "RESPONSEFORMAT",
            "in": "query",
            "description": "select output table format",
            "required": false,
            "type": "string"
          },
          {
            "name": "MAXREC",
            "in": "query",
            "description": "request a specific limit on number of rows to return",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "DEST",
            "in": "query",
            "description": "specify destination where output should be written (VOSpace URI)",
            "required": false,
            "type": "string",
            "format": "uri"
          },
          {
            "name": "UPLOAD",
            "in": "query",
            "collectionFormat": "multi",
            "description": "specify name,location pair for a table to be uploaded and used in the query",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "303": {
            "description": "standard UWS redirect to the created job"
          },
          "401": {
            "description": "Unauthorized - User not authenticated"
          },
          "403": {
            "description": "Permission Denied - Table(s) not readable"
          },
          "404": {
            "description": "Not Found - Table(s) not found"
          },
          "500": {
            "description": "Internal error"
          },
          "503": {
            "description": "Service busy"
          },
          "default": {
            "description": "Unexpeced error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/sync": {
      "get": {
        "summary": "IVOA TAP v1.1",
        "tags": [
          "TAP"
        ],
        "description": "TAP synchronous query endpoint\n",
        "parameters": [
          {
            "name": "LANG",
            "in": "query",
            "description": "specify the query language used in the QUERY parameter",
            "required": true,
            "type": "string"
          },
          {
            "name": "QUERY",
            "in": "query",
            "description": "specify the query",
            "required": true,
            "type": "string"
          },
          {
            "name": "FORMAT",
            "in": "query",
            "description": "supported for backwards compatibility to 1.0 (see: RESPONSEFORMAT)",
            "required": false,
            "type": "string"
          },
          {
            "name": "RESPONSEFORMAT",
            "in": "query",
            "description": "select output table format",
            "required": false,
            "type": "string"
          },
          {
            "name": "MAXREC",
            "in": "query",
            "description": "request a specific limit on number of rows to return",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "UPLOAD",
            "in": "query",
            "collectionFormat": "multi",
            "description": "specify name,location pair for a table to be uploaded and used in the query",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/x-votable+/xml"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized - User not authenticated"
          },
          "403": {
            "description": "Permission Denied - Table(s) not readable"
          },
          "404": {
            "description": "Not Found - Table(s) not found"
          },
          "500": {
            "description": "Internal error"
          },
          "503": {
            "description": "Service busy"
          },
          "default": {
            "description": "Unexpeced error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "summary": "IVOA TAP v1.1",
        "tags": [
          "TAP"
        ],
        "description": "TAP synchronous query endpoint\n",
        "parameters": [
          {
            "name": "LANG",
            "in": "query",
            "description": "specify the query language used in the QUERY parameter",
            "required": true,
            "type": "string"
          },
          {
            "name": "QUERY",
            "in": "query",
            "description": "specify the query",
            "required": true,
            "type": "string"
          },
          {
            "name": "FORMAT",
            "in": "query",
            "description": "supported for backwards compatibility to 1.0 (see: RESPONSEFORMAT)",
            "required": false,
            "type": "string"
          },
          {
            "name": "RESPONSEFORMAT",
            "in": "query",
            "description": "select output table format",
            "required": false,
            "type": "string"
          },
          {
            "name": "MAXREC",
            "in": "query",
            "description": "request a specific limit on number of rows to return",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "UPLOAD",
            "in": "query",
            "collectionFormat": "multi",
            "description": "specify name,location pair for a table to be uploaded and used in the query",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "application/x-votable+/xml"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "401": {
            "description": "Unauthorized - User not authenticated"
          },
          "403": {
            "description": "Permission denied - Table(s) not readable"
          },
          "404": {
            "description": "Not Found - Table(s) not found"
          },
          "500": {
            "description": "Internal error"
          },
          "503": {
            "description": "Service busy"
          },
          "default": {
            "description": "Unexpeced error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/availability": {
      "get": {
        "tags": [
          "Support Interfaces"
        ],
        "summary": "VOSI Availability",
        "description": "Indicates whether the service is operable and shows the reliability of the service for extended and scheduled requests. If the query parameter 'detail=min' is used, a light weight heart beat test will be performed. The heart beat test returns status 200 if the service is available.",
        "parameters": [
          {
            "name": "detail",
            "in": "query",
            "description": "specifies heart beat to be used to check for availability of this service, the value 'min' must be used, otherwise the full availability test will be performed",
            "required": false,
            "type": "string"
          }
        ],
        "produces": [
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "A VOSI availability document in XML.",
            "schema": {
              "$ref": "#/definitions/availability"
            }
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/capabilities": {
      "get": {
        "summary": "VOSI Capabilities",
        "tags": [
          "Support Interfaces"
        ],
        "description": "Provides the service metadata in the form of a list of Capability descriptions.  Each of these descriptions is an \nXML element that:\n<ul>\n<li>states that the service provides a particular, IVOA-standard function;</li>\n<li>lists the interfaces for invoking that function;</li>\n<li>records any details of the implementation of the function that are not defined as default or constant in the standard for that function.</li>\n</ul>\n",
        "produces": [
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "A VOSI Capabilities document in XML.",
            "schema": {
              "$ref": "#/definitions/capabilities"
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service too busy"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tables": {
      "get": {
        "summary": "VOSI Tables",
        "tags": [
          "Support Interfaces"
        ],
        "description": "Provides the table metadata in the form of a TableSet descriptions.\n",
        "produces": [
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "A VOSI <tableset> document in XML.",
            "schema": {
              "$ref": "#/definitions/tables"
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service too busy"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/tables/{name}": {
      "get": {
        "summary": "get table metadata (VOSI)",
        "tags": [
          "Support Interfaces"
        ],
        "description": "Provides the table metadata for a single table.\n",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "a single fully qualified table name (e.g. tap_schema.tables)",
            "required": true,
            "type": "string"
          }
        ],
        "produces": [
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "A VOSI <table> document in XML.",
            "schema": {
              "$ref": "#/definitions/tables"
            }
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service too busy"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "put": {
        "summary": "create table",
        "description": "table description in VOSI table or VOTable (no rows) format\n",
        "tags": [
          "Custom Features"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "the fully qualified name of the table to create\n",
            "required": true,
            "type": "string"
          }
        ],
        "consumes": [
          "text/xml",
          "application/x-votable+xml",
          "application/vnd.apache.parquet"
        ],
        "responses": {
          "201": {
            "description": "table created"
          },
          "400": {
            "description": "create table failed due to invalid input"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service too busy"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "delete": {
        "summary": "drop table",
        "tags": [
          "Custom Features"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "the table to drop",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "table dropped"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service too busy"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/permissions/{name}": {
      "get": {
        "summary": "view schema or table permissions",
        "tags": [
          "Custom Features"
        ],
        "description": "View the owner, public flag, read group, and write group of a schema or table.\n",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "name of the schema or table to view.",
            "required": true,
            "type": "string"
          }
        ],
        "provides": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "successful request"
          },
          "400": {
            "description": "invalid syntax"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service too busy"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      },
      "post": {
        "summary": "modify schema or table permissions",
        "tags": [
          "Custom Features"
        ],
        "description": "Modify any of the public flag, readGroup or writeGroup of a schema or table.  These operations are permitted by the owner of the schema and owners of the target tables.  Parameters are in-line CFLF separated entries in key=value format.  An example of a groupURI is ivo://cadc.nrc.ca/gms?myGroup\n",
        "parameters": [
          {
            "name": "name",
            "in": "path",
            "description": "name of the schema or table to modify.",
            "required": true,
            "type": "string"
          },
          {
            "name": "public",
            "in": "body",
            "description": "public=true or public=false",
            "required": false,
            "type": "string"
          },
          {
            "name": "r-group",
            "in": "body",
            "description": "set or clear read group.  r-group=groupURI or r-group= to clear.  group URI in format ivo://cadc.nrc.ca/gms?groupName",
            "required": false,
            "type": "string"
          },
          {
            "name": "rw-group",
            "in": "body",
            "description": "set or clear read/write group.  rw-group=groupURI or rw-group= to clear.  group URI in format ivo://cadc.nrc.ca/gms?groupName",
            "required": false,
            "type": "string"
          }
        ],
        "consumes": [
          "text/plain"
        ],
        "responses": {
          "200": {
            "description": "permissions updated successfully"
          },
          "400": {
            "description": "invalid permission syntax"
          },
          "403": {
            "description": "Insufficient permission to change permissions"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service too busy"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/load/{tableName}": {
      "post": {
        "summary": "sync streaming row insert",
        "tags": [
          "Custom Features"
        ],
        "description": "Bulk load rows and append to the table. This currently supports input data in CSV and TSV format (with header), and FITS Binary Tables\n",
        "parameters": [
          {
            "name": "tableName",
            "in": "path",
            "description": "a single fully qualified table name (e.g. tap_schema.tables)",
            "required": true,
            "type": "string"
          }
        ],
        "consumes": [
          "text/csv",
          "text/tab-separated-values",
          "application/fits"
        ],
        "responses": {
          "200": {
            "description": "rows successfully inserted",
            "schema": {
              "$ref": "#/definitions/tables"
            }
          },
          "400": {
            "description": "insert rows failed due to invalid input"
          },
          "500": {
            "description": "Internal server error"
          },
          "503": {
            "description": "Service too busy"
          },
          "default": {
            "description": "Unexpected error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    },
    "/table-update": {
      "post": {
        "summary": "async table update (create UWS Job)",
        "tags": [
          "Custom Features"
        ],
        "description": "Asynchronous table update currently update supports index creation. In future it will also support loading content (rows) from a remote location (URI)",
        "parameters": [
          {
            "name": "TABLE",
            "in": "query",
            "description": "the table to update (TABLE={table name}): fully-qualified name of the table to update",
            "required": true,
            "type": "string"
          },
          {
            "name": "INDEX",
            "in": "query",
            "description": "index a column (INDEX={column name}): value is the name of the column to index; currently limited to single column only",
            "required": true,
            "type": "string"
          },
          {
            "name": "UNIQUE",
            "in": "query",
            "description": "create unique index (UNIQUE=true): use with INDEX={column name} to make a unique index (default: false)",
            "required": false,
            "type": "boolean"
          }
        ],
        "produces": [
          "text/xml"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "303": {
            "description": "standard UWS redirect to the created job"
          },
          "401": {
            "description": "Unauthorized - User not authenticated"
          },
          "404": {
            "description": "Not Found - User not found"
          },
          "500": {
            "description": "Internal error"
          },
          "503": {
            "description": "Service busy"
          },
          "default": {
            "description": "Unexpeced error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "Job": {
      "type": "string"
    },
    "availability": {
      "type": "object",
      "xml": {
        "name": "availability",
        "namespace": "http://www.ivoa.net/xml/VOSIAvailability/v1.0",
        "prefix": "vosi"
      },
      "properties": {
        "available": {
          "type": "boolean",
          "xml": {
            "attribute": true,
            "prefix": "vosi"
          }
        },
        "note": {
          "type": "string",
          "xml": {
            "attribute": true,
            "prefix": "vosi"
          }
        }
      }
    },
    "tables": {
      "type": "object",
      "xml": {
        "namespace": "http://www.ivoa.net/xml/VOSITables/v1.0",
        "prefix": "vosi"
      },
      "properties": {
        "available": {
          "type": "boolean",
          "xml": {
            "attribute": true,
            "prefix": "vosi"
          }
        },
        "note": {
          "type": "string",
          "xml": {
            "attribute": true,
            "prefix": "vosi"
          }
        }
      }
    },
    "capabilities": {
      "type": "object",
      "xml": {
        "namespace": "http://www.ivoa.net/xml/VOSICapabilities/v1.0",
        "prefix": "vosi"
      }
    },
    "Error": {
      "required": [
        "code",
        "message"
      ],
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        }
      }
    }
  }
}
